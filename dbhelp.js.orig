<<<<<<< HEAD
javascript
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

class DatabaseHelper {
    constructor() {
        this.dbPath = path.join(__dirname, 'database.db');
        this.db = null;
    }

=======
<<<<<<< HEAD
~
    connect() {
        return new Promise((resolve, reject) => {
            this.db = new sqlite3.Database(this.dbPath, (err) => {
                if (err) {
                    reject(err);
                } else {
                    console.log('Connected to SQLite database');
=======

getAllDestinations() {
        return new Promise((resolve, reject) => {
            const sql = 'SELECT * FROM destinations ORDER BY rating DESC';
            this.db.all(sql, [], (err, rows) => {

    searchDestinations(searchTerm) {
        return new Promise((resolve, reject) => {
            const sql = `
                SELECT * FROM destinations 
                WHERE name LIKE ? OR country LIKE ? OR description LIKE ?
                ORDER BY rating DESC
            `;
            const term = `%${searchTerm}%`;
            this.db.all(sql, [term, term, term], (err, rows) => {

                if (err) {
                    reject(err);
                } else {
                    resolve(rows);
                }
            });
        });
    }

    getDestinationById(id) {
        return new Promise((resolve, reject) => {
            const sql = 'SELECT * FROM destinations WHERE id = ?';
            this.db.get(sql, [id], (err, row) => {
                if (err) {
                    reject(err);
                } else {
                    resolve(row)

    // Close database connection
    close() {
        return new Promise((resolve, reject) => {
            this.db.close((err) => {
                if (err) {
                    reject(err);
                } else {
                    console.log('Database connection closed');
>>>>>>> datastructure
                    resolve();
                }
            });
        });
    }
<<<<<<< HEAD
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
dbhelp.js [unix] (05:29 01/01/1970)                                                             0,1 All
-- INSERT --
=======

}

module.exports = DatabaseHelper;

>>>>>>> datastructure

>>>>>>> dbms
